{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","prevState","removeGood","filter","item","cleanOutGoods","this","className","length","map","type","classNames","onClick","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4FaC,E,4MApFbC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAc,GAAD,mBACRI,EAAUJ,eADF,CAEXE,S,EAKNG,WAAa,SAACH,GACZ,EAAKC,UAAS,YACZ,MAAO,CAAEH,cAD0B,EAApBA,cACuBM,QAAO,SAAAC,GAAI,OAAIA,IAASL,U,EAIlEM,cAAgB,WACd,EAAKL,SAAS,CACZH,cAAe,M,4CAInB,WAAU,IAAD,OACCA,EAAkBS,KAAKV,MAAvBC,cAER,OACE,sBAAKU,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SAEIV,EAAcW,OAAd,UACOX,EAAcY,KAAI,SAAAV,GAAI,iBAAQA,MADrC,aAEI,sBAIR,wBACEW,KAAK,SACLH,UAAWI,IACT,WACA,CAAE,mBAAoBd,EAAcW,SAEtCI,QAASN,KAAKD,cANhB,uBAWA,oBAAIE,UAAU,mBAAd,SACGb,EAAgBe,KAAI,SAAAV,GAAI,OACvB,qBACEQ,UAAWI,IACT,cACA,OACA,CAAE,iBAAkBd,EAAcgB,SAASd,KAJ/C,UAQE,qBAAKQ,UAAU,kBAAf,SACGR,IAEH,wBACEW,KAAK,SACLH,UAAU,YACVK,QAAS,WACHf,EAAcgB,SAASd,GACzB,EAAKG,WAAWH,GAEhB,EAAKD,QAAQC,IAPnB,SAWGF,EAAcgB,SAASd,GAAQ,SAAW,aAhBxCA,e,GA1DDe,IAAMC,WClBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.15a214cb.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGood = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [\n        ...prevState.selectedGoods,\n        good,\n      ],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState(({ selectedGoods }) => {\n      return { selectedGoods: selectedGoods.filter(item => item !== good) };\n    });\n  };\n\n  cleanOutGoods = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {\n            selectedGoods.length\n              ? `${selectedGoods.map(good => ` ${good}`)} selected`\n              : 'No goods selected'\n          }\n        </h1>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'App__btn',\n            { 'App__btn--active': selectedGoods.length },\n          )}\n          onClick={this.cleanOutGoods}\n        >\n          Clean out\n        </button>\n\n        <ul className=\"App__goods goods\">\n          {goodsFromServer.map(good => (\n            <li\n              className={classNames(\n                'goods__item',\n                'item',\n                { 'item--selected': selectedGoods.includes(good) },\n              )}\n              key={good}\n            >\n              <div className=\"item__good-name\">\n                {good}\n              </div>\n              <button\n                type=\"button\"\n                className=\"item__btn\"\n                onClick={() => {\n                  if (selectedGoods.includes(good)) {\n                    this.removeGood(good);\n                  } else {\n                    this.addGood(good);\n                  }\n                }}\n              >\n                {selectedGoods.includes(good) ? 'Remove' : 'Select'}\n              </button>\n            </li>\n\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}